reshapeNodes:

# Person
#
# A FHIR bundle contains one Patient, and that is mapped as a
# graph model Person. Below mappings also collect race information from the
# us-core-race extension
  
  "https://dartnet.info/graphModel/Person":
    evaluate: 
      - >-
        match (n:`https://hl7.org/fhir/Patient`) return n as patient
      - >-
        match (patient) -[*]->
             (raceExt:`https://hl7.org/fhir/Extension` {url:"http://hl7.org/fhir/us/core/StructureDefinition/us-core-race"}) -[*]->
             (code {`https://lschema.org/attributeName`: "valueCoding"}) return code as raceCode
    valueExpr:
      - return patient
    mapContext: return patient

  "https://dartnet.info/graphModel/Person/race/source/code":
    valueExpr:
      - return raceCode.code

  "https://dartnet.info/graphModel/Person/race/source/system":
    valueExpr:
      - return raceCode.system
      

  "https://dartnet.info/graphModel/Person/id":
    source: "https://hl7.org/fhir/Patient/id"
  "https://dartnet.info/graphModel/Person/birthDate":
    source: "https://hl7.org/fhir/Patient/birthDate"
  "https://dartnet.info/graphModel/Person/gender/source/text":
    source: "https://hl7.org/fhir/Patient/gender"
      
#
#  Observations
#
# For each observation in the bundle, we create graph model Observation object.
# The observation category is stored in the Observation type. An observation may contain
# a measured value, which is captured in Observation/measuredValue/source. Observation may include
# codes defining the observation, and these are collected under Observation/source


  "https://dartnet.info/graphModel/Person/observations/element":
    valueExpr: >-
      match (n:`https://hl7.org/fhir/Observation`) return n as observation
    mapContext: return observation

  "https://dartnet.info/graphModel/Observation/id":
    source: https://hl7.org/fhir/Observation/id
    
  "https://dartnet.info/graphModel/Observation/type":
    evaluate:
      - >-
        match (observation)-[*]->(c {system:"http://terminology.hl7.org/CodeSystem/observation-category"})
               return c as observationTypeCode
    valueExpr:
      - return observationTypeCode.code


  "https://dartnet.info/graphModel/Observation/measuredValue/source":
    valueExpr: >-
      match (observation)-[]->(v {`https://lschema.org/attributeName`:"valueQuantity"}) return v as valueQuantity
    mapContext: return valueQuantity

  "https://dartnet.info/graphModel/Observation/source":
    evaluate: >-
      match (observation)-[]->
           ({`https://lschema.org/schemaNodeId`:"https://hl7.org/fhir/Observation/code"})-[*]->
           (v {`https://lschema.org/schemaNodeId`:"https://hl7.org/fhir/Observation/code/coding/*"})
           return v as observationCode 
    valueExpr:
      - return observationCode

  "https://dartnet.info/graphModel/Observation/source/system":
    valueExpr:
      - return observationCode.system
  "https://dartnet.info/graphModel/Observation/source/code":
    valueExpr:
      - return observationCode.code
  "https://dartnet.info/graphModel/Observation/source/text":
    valueExpr:
      - return observationCode.display


  "https://dartnet.info/graphModel/Observation/person":
    valueExpr:
      - match (patient)-[]->(id {`https://lschema.org/schemaNodeId`:"https://hl7.org/fhir/Patient/id"}) return id
      


  "https://dartnet.info/graphModel/Observation/date":
    source: "https://hl7.org/fhir/Observation/effectiveDateTime"
  "https://dartnet.info/graphModel/Observation/measuredValue/source/text":
    source: "https://hl7.org/fhir/Observation/valueQuantity/value"
  "https://dartnet.info/graphModel/Observation/measuredValue/source/unit":
    source: "https://hl7.org/fhir/Observation/valueQuantity/unit"
  "https://dartnet.info/graphModel/Observation/measuredValue/source/system":
    source: "https://hl7.org/fhir/Observation/valueQuantity/system"


# Procedures

  "https://dartnet.info/graphModel/Person/procedures/element":
    valueExpr: >-
      match (n:`https://hl7.org/fhir/Procedure`) return n as procedure
    mapContext: return procedure

  "https://dartnet.info/graphModel/Procedure/id":
    source: https://hl7.org/fhir/Procedure/id

  "https://dartnet.info/graphModel/Procedure/source":
    evaluate: >-
      match (procedure)-[*]->
           (v {`https://lschema.org/schemaNodeId`:"https://hl7.org/fhir/Procedure/code/coding/*"})
           return v as procedureCode
    valueExpr:
      - return procedureCode

  "https://dartnet.info/graphModel/Procedure/source/system":
    valueExpr:
      - return procedureCode.system
  "https://dartnet.info/graphModel/Procedure/source/code":
    valueExpr:
      - return procedureCode.code
  "https://dartnet.info/graphModel/Procedure/source/text":
    valueExpr:
      - return procedureCode.display
      
  "https://dartnet.info/graphModel/Procedure/date":
    valueExpr:
      - match (procedure)-[]->({`https://lschema.org/schemaNodeId`:"https://hl7.org/fhir/Procedure/performedPeriod"})-[]->(d {`https://lschema.org/attributeName`:"start"}) return d

  "https://dartnet.info/graphModel/Procedure/person":
    valueExpr:
      - match (patient)-[]->(id {`https://lschema.org/schemaNodeId`:"https://hl7.org/fhir/Patient/id"}) return id

#  Condition

  "https://dartnet.info/graphModel/Person/conditions/element":
    valueExpr: >-
      match (n:`https://hl7.org/fhir/Condition`) return n as condition
    mapContext: return condition

  "https://dartnet.info/graphModel/Condition/id":
    source: https://hl7.org/fhir/Condition/id

  "https://dartnet.info/graphModel/Condition/type":
    evaluate:
      - >-
        match (condition)-[*]->(c {system:"http://terminology.hl7.org/CodeSystem/condition-category"})
               return c as conditionTypeCode
    valueExpr:
      - return conditionTypeCode.code  

  "https://dartnet.info/graphModel/Condition/source":
    evaluate: >-
      match (condition)-[*]->
           (v {`https://lschema.org/schemaNodeId`:"https://hl7.org/fhir/Condition/code/coding/*"})
           return v as conditionCode
    valueExpr:
      - return conditionCode  

  "https://dartnet.info/graphModel/Condition/source/system":
    valueExpr:
      - return conditionCode.system
  "https://dartnet.info/graphModel/Condition/source/code":
    valueExpr:
      - return conditionCode.code
  "https://dartnet.info/graphModel/Condition/source/text":
    valueExpr:
      - return conditionCode.display

  "https://dartnet.info/graphModel/Condition/start":
    valueExpr:
      - match (condition)-[]->({`https://lschema.org/schemaNodeId`:"https://hl7.org/fhir/Condition/onsetPeriod"})-[]->(d {`https://lschema.org/attributeName`:"start"}) return d

  "https://dartnet.info/graphModel/Condition/end":
    valueExpr:
      - match (condition)-[]->({`https://lschema.org/schemaNodeId`:"https://hl7.org/fhir/Condition/onsetPeriod"})-[]->(d {`https://lschema.org/attributeName`:"end"}) return d

  "https://dartnet.info/graphModel/Condition/person":
    valueExpr:
      - match (patient)-[]->(id {`https://lschema.org/schemaNodeId`:"https://hl7.org/fhir/Patient/id"}) return id

# Drug Exposure
# For each observation in the bundle, we create graph model Drug Exposure object.
# The drug exposure category is stored in the Drug Exposure type. A drug exposure may contain
# a drugType value, which is captured in Drug Exposure/drugType/source. Drug Exposure may include
# codes defining the drug exposure, and these are collected under Drug Exposure/source

  "https://dartnet.info/graphModel/Person/drugExposures/element":
    valueExpr:
    - >-
      match (n:`https://hl7.org/fhir/Immunization`) return n as drugExposure
    # - >- 
    #   match (n:`https://hl7.org/fhir/MedicationAdministration`) return n as drugExposure, "MedicationAdm" as DrugExposureType
    mapContext: return drugExposure

  "https://dartnet.info/graphModel/DrugExposure/id":
    valueExpr: match (drugExposure)-[]->(n {`https://lschema.org/attributeName`:"id"}) return n

  "https://dartnet.info/graphModel/DrugExposure/drug/source":
    evaluate: >-
      match (drugExposure)-[*]->
           (v {`https://lschema.org/schemaNodeId`:"https://hl7.org/fhir/DrugExposure/code/coding/*"})
           return v as drugExposureCode
    valueExpr:
      - return drugExposureCode

  "https://dartnet.info/graphModel/DrugExposure/drug/source/system":
    valueExpr:
      - return drugExposureCode.system
  "https://dartnet.info/graphModel/DrugExposure/drug/source/code":
    valueExpr:
      - return drugExposureCode.code
  "https://dartnet.info/graphModel/DrugExposure/drug/source/text":
    valueExpr:
      - return drugExposureCode.display

  "https://dartnet.info/graphModel/DrugExposure/person":
    valueExpr:
      - match (patient)-[]->(id {`https://lschema.org/schemaNodeId`:"https://hl7.org/fhir/Patient/id"}) return id 

# Payer Plan

  # "https://dartnet.info/graphModel/Person/PayerPlan/element":
  #   valueExpr:
  #   - >-
  #     match (n:`https://hl7.org/fhir/PaymentNotice`) return n as payerPlan, "PaymentNotice" as PayerPlanType
  #   - >- 
  #     match (n:`https://hl7.org/fhir/PaymentReconciliation`) return n as payerPlan, "PaymentReconciliation" as PayerPlanType
  #   mapContext: return payerPlan

  # "https://dartnet.info/graphModel/PayerPlan/id":
  #   valueExpr: match (payerPlan)-[]->(n {`https://lschema.org/attributeName`:"id"}) return n
  
  # "https://dartnet.info/graphModel/PayerPlan/source":
  #   evaluate: >-
  #     match (payerPlan) return 
  #     case PayerPlanType
  #       when "PaymentNotice" then 
  #         match (payerPlan)-[*]->({`https://lschema.org/attributeName`:"coding"})->(v) as payerPlanSorce
  #       when "PaymentReconciliation" then
  #         match (payerPlan)-[*]->({`https://lschema.org/attributeName`:"coding"})->(v) as payerPlanSorce
  #     end
  #   valueExpr:
  #     - return payerPlanSource

  # "https://dartnet.info/graphModel/PayerPlan/source/system":
  #   valueExpr:
  #   - return payerPlan.system
  # "https://dartnet.info/graphModel/PayerPlan/source/code":
  #   valueExpr:
  #     - return payerPlan.code
  # "https://dartnet.info/graphModel/PayerPlan/source/text":
  #   valueExpr:
  #     - return payerPlan.display

  # "https://dartnet.info/graphModel/PaymentNotice/source":
  #   evaluate: >-
  #     match (procedure)-[*]->
  #          (v {`https://lschema.org/schemaNodeId`:"https://hl7.org/fhir/PaymentNotice/code/coding/*"})
  #          return v as payerPlan
  #   valueExpr:
  #     - return payerPlan

  # "https://dartnet.info/graphModel/PaymentNotice/source/system":
  # valueExpr:
  #   - return payerPlan.system
  # "https://dartnet.info/graphModel/PaymentNotice/source/code":
  #   valueExpr:
  #     - return payerPlan.code
  # "https://dartnet.info/graphModel/PaymentNotice/source/text":
  #   valueExpr:
  #     - return payerPlan.display

  # "https://dartnet.info/graphModel/PaymentReconciliation/start":
  #   source: "https://hl7.org/fhir/PaymentReconciliation/created"
  # "https://dartnet.info/graphModel/PaymentReconciliation/end":
  #   source: "https://hl7.org/fhir/PaymentReconciliation/paymentDate"
  # "https://dartnet.info/graphModel/PaymentReconciliation/payer/source/text":
  #   source: "https://hl7.org/fhir/PaymentReconciliation/detail/value"
  # "https://dartnet.info/graphModel/PaymentReconciliation/payer/source/unit":
  #   source: "https://hl7.org/fhir/PaymentReconciliation/detail/unit"
  # "https://dartnet.info/graphModel/PaymentReconciliation/payer/source/system":
  #   source: "https://hl7.org/fhir/PaymentReconciliation/detail/system"


# Visit

  "https://dartnet.info/graphModel/Person/visits/element":
    evaluate: 
    - >-
      match (n:`https://hl7.org/fhir/Appointment`) return n as visit
    valueExpr:
      return visit
    mapContext: return visit

  # "https://dartnet.info/graphModel/Appointment/id":
  #   source: https://hl7.org/fhir/Appointment/id

  "https://dartnet.info/graphModel/Visit/type":
    evaluate:
      - >-
        match (visit)-[*]->(c {system:"http://terminology.hl7.org/CodeSystem/appointment-category"})
               return c as visitTypeCode
    valueExpr:
      - return visitTypeCode.code

  # "https://dartnet.info/graphModel/Appointment/start":
  #   valueExpr:
  #     - match (condition)-[]->({`https://lschema.org/schemaNodeId`:"https://hl7.org/fhir/Appointment/start"})-[]->(d {`https://lschema.org/attributeName`:"start"}) return d

  # "https://dartnet.info/graphModel/Appointment/end":
  #   valueExpr:
  #     - match (condition)-[]->({`https://lschema.org/schemaNodeId`:"https://hl7.org/fhir/Appointment/end"})-[]->(d {`https://lschema.org/attributeName`:"end"}) return d